digraph "CFG for 'Fit' function" {
	label="CFG for 'Fit' function";

	Node0x88b8f80 [shape=record,label="{entry:\l  %idxprom = sext i32 %i to i64\l  %arrayidx = getelementptr inbounds [13 x i32], [13 x i32]* @piecemax, i64 0,\l... i64 %idxprom\l  %tmp = load i32, i32* %arrayidx, align 4, !tbaa !2\l  %cmp15 = icmp slt i32 %tmp, 0\l  br i1 %cmp15, label %entry.cleanup_crit_edge, label %for.body.preheader\l|{<s0>T|<s1>F}}"];
	Node0x88b8f80:s0 -> Node0x88b5320;
	Node0x88b8f80:s1 -> Node0x88b5370;
	Node0x88b5320 [shape=record,label="{entry.cleanup_crit_edge:                          \l  br label %cleanup\l}"];
	Node0x88b5320 -> Node0x88bfe50;
	Node0x88b5370 [shape=record,label="{for.body.preheader:                               \l  %tmp1 = sext i32 %j to i64\l  br label %for.body\l}"];
	Node0x88b5370 -> Node0x88b53c0;
	Node0x88b53c0 [shape=record,label="{for.body:                                         \l  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next,\l... %for.inc.for.body_crit_edge ]\l  %arrayidx4 = getelementptr inbounds [13 x [512 x i32]], [13 x [512 x i32]]*\l... @p, i64 0, i64 %idxprom, i64 %indvars.iv\l  %tmp2 = load i32, i32* %arrayidx4, align 4, !tbaa !2\l  %tobool = icmp eq i32 %tmp2, 0\l  br i1 %tobool, label %for.body.for.inc_crit_edge, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x88b53c0:s0 -> Node0x88b5410;
	Node0x88b53c0:s1 -> Node0x88b5460;
	Node0x88b5410 [shape=record,label="{for.body.for.inc_crit_edge:                       \l  br label %for.inc\l}"];
	Node0x88b5410 -> Node0x88bfd60;
	Node0x88b5460 [shape=record,label="{if.then:                                          \l  %tmp3 = add nsw i64 %indvars.iv, %tmp1\l  %arrayidx6 = getelementptr inbounds [512 x i32], [512 x i32]* @puzzl, i64 0,\l... i64 %tmp3\l  %tmp4 = load i32, i32* %arrayidx6, align 4, !tbaa !2\l  %tobool7 = icmp eq i32 %tmp4, 0\l  br i1 %tobool7, label %if.then.for.inc_crit_edge, label\l... %if.then.cleanup_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x88b5460:s0 -> Node0x88bfd10;
	Node0x88b5460:s1 -> Node0x88bfcc0;
	Node0x88bfcc0 [shape=record,label="{if.then.cleanup_crit_edge:                        \l  br label %cleanup\l}"];
	Node0x88bfcc0 -> Node0x88bfe50;
	Node0x88bfd10 [shape=record,label="{if.then.for.inc_crit_edge:                        \l  br label %for.inc\l}"];
	Node0x88bfd10 -> Node0x88bfd60;
	Node0x88bfd60 [shape=record,label="{for.inc:                                          \l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %tmp5 = load i32, i32* %arrayidx, align 4, !tbaa !2\l  %tmp6 = sext i32 %tmp5 to i64\l  %cmp = icmp slt i64 %indvars.iv, %tmp6\l  br i1 %cmp, label %for.inc.for.body_crit_edge, label\l... %for.inc.cleanup_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x88bfd60:s0 -> Node0x88bfe00;
	Node0x88bfd60:s1 -> Node0x88bfdb0;
	Node0x88bfdb0 [shape=record,label="{for.inc.cleanup_crit_edge:                        \l  br label %cleanup\l}"];
	Node0x88bfdb0 -> Node0x88bfe50;
	Node0x88bfe00 [shape=record,label="{for.inc.for.body_crit_edge:                       \l  br label %for.body\l}"];
	Node0x88bfe00 -> Node0x88b53c0;
	Node0x88bfe50 [shape=record,label="{cleanup:                                          \l  %retval.0 = phi i32 [ 1, %entry.cleanup_crit_edge ], [ 1,\l... %for.inc.cleanup_crit_edge ], [ 0, %if.then.cleanup_crit_edge ]\l  ret i32 %retval.0\l}"];
}
