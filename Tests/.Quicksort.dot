digraph "CFG for 'Quicksort' function" {
	label="CFG for 'Quicksort' function";

	Node0x9e22e10 [shape=record,label="{entry:\l  br label %tailrecurse\l}"];
	Node0x9e22e10 -> Node0x9e23230;
	Node0x9e23230 [shape=record,label="{tailrecurse:                                      \l  %vSSA_phi16 = phi i32 [ %vSSA_sigma15, %if.end24.tailrecurse_crit_edge ], [\l... %r, %entry ]\l  %l.tr = phi i32 [ %l, %entry ], [ %vSSA_sigma14,\l... %if.end24.tailrecurse_crit_edge ]\l  %add = add nsw i32 %l.tr, %vSSA_phi16\l  %div = sdiv i32 %add, 2\l  %idxprom = sext i32 %div to i64\l  %arrayidx = getelementptr inbounds i32, i32* %a, i64 %idxprom\l  %tmp = load i32, i32* %arrayidx, align 4, !tbaa !2\l  br label %do.body\l}"];
	Node0x9e23230 -> Node0x9e237c0;
	Node0x9e237c0 [shape=record,label="{do.body:                                          \l  %vSSA_phi = phi i32 [ %vSSA_sigma2, %do.cond.do.body_crit_edge ], [ %tmp,\l... %tailrecurse ]\l  %j.0 = phi i32 [ %vSSA_phi16, %tailrecurse ], [ %vSSA_sigma11,\l... %do.cond.do.body_crit_edge ]\l  %i.0 = phi i32 [ %l.tr, %tailrecurse ], [ %vSSA_sigma9,\l... %do.cond.do.body_crit_edge ]\l  %tmp1 = sext i32 %i.0 to i64\l  br label %while.cond\l}"];
	Node0x9e237c0 -> Node0x9e23810;
	Node0x9e23810 [shape=record,label="{while.cond:                                       \l  %indvars.iv = phi i64 [ %indvars.iv.next, %while.cond.while.cond_crit_edge\l... ], [ %tmp1, %do.body ]\l  %arrayidx2 = getelementptr inbounds i32, i32* %a, i64 %indvars.iv\l  %tmp2 = load i32, i32* %arrayidx2, align 4, !tbaa !2\l  %cmp = icmp slt i32 %tmp2, %vSSA_phi\l  %indvars.iv.next = add i64 %indvars.iv, 1\l  br i1 %cmp, label %while.cond.while.cond_crit_edge, label\l... %while.cond4.preheader\l|{<s0>T|<s1>F}}"];
	Node0x9e23810:s0 -> Node0x9e23860;
	Node0x9e23810:s1 -> Node0x9e238b0;
	Node0x9e23860 [shape=record,label="{while.cond.while.cond_crit_edge:                  \l  br label %while.cond\l}"];
	Node0x9e23860 -> Node0x9e23810;
	Node0x9e238b0 [shape=record,label="{while.cond4.preheader:                            \l  %vSSA_sigma1 = phi i32 [ %vSSA_phi, %while.cond ]\l  %vSSA_sigma = phi i32 [ %tmp2, %while.cond ]\l  %tmp3 = trunc i64 %indvars.iv to i32\l  %tmp4 = sext i32 %j.0 to i64\l  br label %while.cond4\l}"];
	Node0x9e238b0 -> Node0x9e23900;
	Node0x9e23900 [shape=record,label="{while.cond4:                                      \l  %indvars.iv65 = phi i64 [ %indvars.iv.next66,\l... %while.cond4.while.cond4_crit_edge ], [ %tmp4, %while.cond4.preheader ]\l  %arrayidx6 = getelementptr inbounds i32, i32* %a, i64 %indvars.iv65\l  %tmp5 = load i32, i32* %arrayidx6, align 4, !tbaa !2\l  %cmp7 = icmp slt i32 %vSSA_sigma1, %tmp5\l  %indvars.iv.next66 = add i64 %indvars.iv65, -1\l  br i1 %cmp7, label %while.cond4.while.cond4_crit_edge, label %while.end9\l|{<s0>T|<s1>F}}"];
	Node0x9e23900:s0 -> Node0x9e23950;
	Node0x9e23900:s1 -> Node0x9e239a0;
	Node0x9e23950 [shape=record,label="{while.cond4.while.cond4_crit_edge:                \l  br label %while.cond4\l}"];
	Node0x9e23950 -> Node0x9e23900;
	Node0x9e239a0 [shape=record,label="{while.end9:                                       \l  %vSSA_sigma3 = phi i32 [ %tmp5, %while.cond4 ]\l  %vSSA_sigma2 = phi i32 [ %vSSA_sigma1, %while.cond4 ]\l  %tmp6 = trunc i64 %indvars.iv65 to i32\l  %cmp10 = icmp sgt i32 %tmp3, %tmp6\l  br i1 %cmp10, label %while.end9.do.cond_crit_edge, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x9e239a0:s0 -> Node0x9e239f0;
	Node0x9e239a0:s1 -> Node0x9e23a40;
	Node0x9e239f0 [shape=record,label="{while.end9.do.cond_crit_edge:                     \l  %vSSA_sigma6 = phi i32 [ %tmp6, %while.end9 ]\l  %vSSA_sigma4 = phi i32 [ %tmp3, %while.end9 ]\l  br label %do.cond\l}"];
	Node0x9e239f0 -> Node0x9e23a90;
	Node0x9e23a40 [shape=record,label="{if.then:                                          \l  %vSSA_sigma7 = phi i32 [ %tmp6, %while.end9 ]\l  %vSSA_sigma5 = phi i32 [ %tmp3, %while.end9 ]\l  %arrayidx2.le = getelementptr inbounds i32, i32* %a, i64 %indvars.iv\l  %arrayidx6.le = getelementptr inbounds i32, i32* %a, i64 %indvars.iv65\l  store i32 %vSSA_sigma3, i32* %arrayidx2.le, align 4, !tbaa !2\l  store i32 %vSSA_sigma, i32* %arrayidx6.le, align 4, !tbaa !2\l  %add19 = add nsw i32 %vSSA_sigma5, 1\l  %sub20 = add nsw i32 %vSSA_sigma7, -1\l  br label %do.cond\l}"];
	Node0x9e23a40 -> Node0x9e23a90;
	Node0x9e23a90 [shape=record,label="{do.cond:                                          \l  %j.2 = phi i32 [ %sub20, %if.then ], [ %vSSA_sigma6,\l... %while.end9.do.cond_crit_edge ]\l  %i.2 = phi i32 [ %add19, %if.then ], [ %vSSA_sigma4,\l... %while.end9.do.cond_crit_edge ]\l  %cmp21 = icmp sgt i32 %i.2, %j.2\l  br i1 %cmp21, label %do.end, label %do.cond.do.body_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x9e23a90:s0 -> Node0x9e23b30;
	Node0x9e23a90:s1 -> Node0x9e23ae0;
	Node0x9e23ae0 [shape=record,label="{do.cond.do.body_crit_edge:                        \l  %vSSA_sigma11 = phi i32 [ %j.2, %do.cond ]\l  %vSSA_sigma9 = phi i32 [ %i.2, %do.cond ]\l  br label %do.body\l}"];
	Node0x9e23ae0 -> Node0x9e237c0;
	Node0x9e23b30 [shape=record,label="{do.end:                                           \l  %vSSA_sigma10 = phi i32 [ %j.2, %do.cond ]\l  %vSSA_sigma8 = phi i32 [ %i.2, %do.cond ]\l  %cmp22 = icmp sgt i32 %vSSA_sigma10, %l.tr\l  br i1 %cmp22, label %if.then23, label %do.end.if.end24_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x9e23b30:s0 -> Node0x9e23bd0;
	Node0x9e23b30:s1 -> Node0x9e23b80;
	Node0x9e23b80 [shape=record,label="{do.end.if.end24_crit_edge:                        \l  br label %if.end24\l}"];
	Node0x9e23b80 -> Node0x9e23c20;
	Node0x9e23bd0 [shape=record,label="{if.then23:                                        \l  %vSSA_sigma13 = phi i32 [ %l.tr, %do.end ]\l  %vSSA_sigma12 = phi i32 [ %vSSA_sigma10, %do.end ]\l  tail call void @Quicksort(i32* nonnull %a, i32 %vSSA_sigma13, i32\l... %vSSA_sigma12)\l  br label %if.end24\l}"];
	Node0x9e23bd0 -> Node0x9e23c20;
	Node0x9e23c20 [shape=record,label="{if.end24:                                         \l  %cmp25 = icmp slt i32 %vSSA_sigma8, %vSSA_phi16\l  br i1 %cmp25, label %if.end24.tailrecurse_crit_edge, label %if.end27\l|{<s0>T|<s1>F}}"];
	Node0x9e23c20:s0 -> Node0x9e23c70;
	Node0x9e23c20:s1 -> Node0x9e23cc0;
	Node0x9e23c70 [shape=record,label="{if.end24.tailrecurse_crit_edge:                   \l  %vSSA_sigma15 = phi i32 [ %vSSA_phi16, %if.end24 ]\l  %vSSA_sigma14 = phi i32 [ %vSSA_sigma8, %if.end24 ]\l  br label %tailrecurse\l}"];
	Node0x9e23c70 -> Node0x9e23230;
	Node0x9e23cc0 [shape=record,label="{if.end27:                                         \l  ret void\l}"];
}
