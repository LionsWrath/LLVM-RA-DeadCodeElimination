digraph "CFG for 'Remove' function" {
	label="CFG for 'Remove' function";

	Node0x88c3c10 [shape=record,label="{entry:\l  %idxprom = sext i32 %i to i64\l  %arrayidx = getelementptr inbounds [13 x i32], [13 x i32]* @piecemax, i64 0,\l... i64 %idxprom\l  %tmp = load i32, i32* %arrayidx, align 4, !tbaa !2\l  %cmp22 = icmp slt i32 %tmp, 0\l  br i1 %cmp22, label %entry.for.end_crit_edge, label %for.body.lr.ph\l|{<s0>T|<s1>F}}"];
	Node0x88c3c10:s0 -> Node0x88b81e0;
	Node0x88c3c10:s1 -> Node0x88b8230;
	Node0x88b81e0 [shape=record,label="{entry.for.end_crit_edge:                          \l  br label %for.end\l}"];
	Node0x88b81e0 -> Node0x88c5650;
	Node0x88b8230 [shape=record,label="{for.body.lr.ph:                                   \l  %tmp1 = load i32, i32* %arrayidx, align 4, !tbaa !2\l  %tmp2 = sext i32 %j to i64\l  %tmp3 = sext i32 %tmp1 to i64\l  br label %for.body\l}"];
	Node0x88b8230 -> Node0x88b8280;
	Node0x88b8280 [shape=record,label="{for.body:                                         \l  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc.for.body_crit_edge ], [\l... 0, %for.body.lr.ph ]\l  %arrayidx4 = getelementptr inbounds [13 x [512 x i32]], [13 x [512 x i32]]*\l... @p, i64 0, i64 %idxprom, i64 %indvars.iv\l  %tmp4 = load i32, i32* %arrayidx4, align 4, !tbaa !2\l  %tobool = icmp eq i32 %tmp4, 0\l  br i1 %tobool, label %for.body.for.inc_crit_edge, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x88b8280:s0 -> Node0x88b82d0;
	Node0x88b8280:s1 -> Node0x88b8320;
	Node0x88b82d0 [shape=record,label="{for.body.for.inc_crit_edge:                       \l  br label %for.inc\l}"];
	Node0x88b82d0 -> Node0x88b8370;
	Node0x88b8320 [shape=record,label="{if.then:                                          \l  %tmp5 = add nsw i64 %indvars.iv, %tmp2\l  %arrayidx6 = getelementptr inbounds [512 x i32], [512 x i32]* @puzzl, i64 0,\l... i64 %tmp5\l  store i32 0, i32* %arrayidx6, align 4, !tbaa !2\l  br label %for.inc\l}"];
	Node0x88b8320 -> Node0x88b8370;
	Node0x88b8370 [shape=record,label="{for.inc:                                          \l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %cmp = icmp slt i64 %indvars.iv, %tmp3\l  br i1 %cmp, label %for.inc.for.body_crit_edge, label\l... %for.inc.for.end_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x88b8370:s0 -> Node0x88c5600;
	Node0x88b8370:s1 -> Node0x88c55b0;
	Node0x88c55b0 [shape=record,label="{for.inc.for.end_crit_edge:                        \l  br label %for.end\l}"];
	Node0x88c55b0 -> Node0x88c5650;
	Node0x88c5600 [shape=record,label="{for.inc.for.body_crit_edge:                       \l  br label %for.body\l}"];
	Node0x88c5600 -> Node0x88b8280;
	Node0x88c5650 [shape=record,label="{for.end:                                          \l  %arrayidx8 = getelementptr inbounds [13 x i32], [13 x i32]* @class, i64 0,\l... i64 %idxprom\l  %tmp6 = load i32, i32* %arrayidx8, align 4, !tbaa !2\l  %idxprom9 = sext i32 %tmp6 to i64\l  %arrayidx10 = getelementptr inbounds [4 x i32], [4 x i32]* @piececount, i64\l... 0, i64 %idxprom9\l  %tmp7 = load i32, i32* %arrayidx10, align 4, !tbaa !2\l  %add11 = add nsw i32 %tmp7, 1\l  store i32 %add11, i32* %arrayidx10, align 4, !tbaa !2\l  ret void\l}"];
}
