digraph "CFG for 'Place' function" {
	label="CFG for 'Place' function";

	Node0x88c0ca0 [shape=record,label="{entry:\l  %idxprom = sext i32 %i to i64\l  %arrayidx = getelementptr inbounds [13 x i32], [13 x i32]* @piecemax, i64 0,\l... i64 %idxprom\l  %tmp = load i32, i32* %arrayidx, align 4, !tbaa !2\l  %cmp39 = icmp slt i32 %tmp, 0\l  br i1 %cmp39, label %entry.for.end_crit_edge, label %for.body.lr.ph\l|{<s0>T|<s1>F}}"];
	Node0x88c0ca0:s0 -> Node0x88c1610;
	Node0x88c0ca0:s1 -> Node0x88c1660;
	Node0x88c1610 [shape=record,label="{entry.for.end_crit_edge:                          \l  br label %for.end\l}"];
	Node0x88c1610 -> Node0x88c1890;
	Node0x88c1660 [shape=record,label="{for.body.lr.ph:                                   \l  %tmp1 = load i32, i32* %arrayidx, align 4, !tbaa !2\l  %tmp2 = sext i32 %j to i64\l  %tmp3 = sext i32 %tmp1 to i64\l  br label %for.body\l}"];
	Node0x88c1660 -> Node0x88c16b0;
	Node0x88c16b0 [shape=record,label="{for.body:                                         \l  %indvars.iv43 = phi i64 [ %indvars.iv.next44, %for.inc.for.body_crit_edge ],\l... [ 0, %for.body.lr.ph ]\l  %arrayidx4 = getelementptr inbounds [13 x [512 x i32]], [13 x [512 x i32]]*\l... @p, i64 0, i64 %idxprom, i64 %indvars.iv43\l  %tmp4 = load i32, i32* %arrayidx4, align 4, !tbaa !2\l  %tobool = icmp eq i32 %tmp4, 0\l  br i1 %tobool, label %for.body.for.inc_crit_edge, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x88c16b0:s0 -> Node0x88c1700;
	Node0x88c16b0:s1 -> Node0x88c1750;
	Node0x88c1700 [shape=record,label="{for.body.for.inc_crit_edge:                       \l  br label %for.inc\l}"];
	Node0x88c1700 -> Node0x88c17a0;
	Node0x88c1750 [shape=record,label="{if.then:                                          \l  %tmp5 = add nsw i64 %indvars.iv43, %tmp2\l  %arrayidx6 = getelementptr inbounds [512 x i32], [512 x i32]* @puzzl, i64 0,\l... i64 %tmp5\l  store i32 1, i32* %arrayidx6, align 4, !tbaa !2\l  br label %for.inc\l}"];
	Node0x88c1750 -> Node0x88c17a0;
	Node0x88c17a0 [shape=record,label="{for.inc:                                          \l  %indvars.iv.next44 = add nuw nsw i64 %indvars.iv43, 1\l  %cmp = icmp slt i64 %indvars.iv43, %tmp3\l  br i1 %cmp, label %for.inc.for.body_crit_edge, label\l... %for.inc.for.end_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x88c17a0:s0 -> Node0x88c1840;
	Node0x88c17a0:s1 -> Node0x88c17f0;
	Node0x88c17f0 [shape=record,label="{for.inc.for.end_crit_edge:                        \l  br label %for.end\l}"];
	Node0x88c17f0 -> Node0x88c1890;
	Node0x88c1840 [shape=record,label="{for.inc.for.body_crit_edge:                       \l  br label %for.body\l}"];
	Node0x88c1840 -> Node0x88c16b0;
	Node0x88c1890 [shape=record,label="{for.end:                                          \l  %arrayidx8 = getelementptr inbounds [13 x i32], [13 x i32]* @class, i64 0,\l... i64 %idxprom\l  %tmp6 = load i32, i32* %arrayidx8, align 4, !tbaa !2\l  %idxprom9 = sext i32 %tmp6 to i64\l  %arrayidx10 = getelementptr inbounds [4 x i32], [4 x i32]* @piececount, i64\l... 0, i64 %idxprom9\l  %tmp7 = load i32, i32* %arrayidx10, align 4, !tbaa !2\l  %sub = add nsw i32 %tmp7, -1\l  store i32 %sub, i32* %arrayidx10, align 4, !tbaa !2\l  %cmp1636 = icmp slt i32 %j, 512\l  br i1 %cmp1636, label %for.body17.preheader, label %for.end.cleanup_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x88c1890:s0 -> Node0x88c1930;
	Node0x88c1890:s1 -> Node0x88c18e0;
	Node0x88c18e0 [shape=record,label="{for.end.cleanup_crit_edge:                        \l  br label %cleanup\l}"];
	Node0x88c18e0 -> Node0x88c1b10;
	Node0x88c1930 [shape=record,label="{for.body17.preheader:                             \l  %vSSA_sigma = phi i32 [ %j, %for.end ]\l  %tmp8 = sext i32 %vSSA_sigma to i64\l  br label %for.body17\l}"];
	Node0x88c1930 -> Node0x88c1980;
	Node0x88c1980 [shape=record,label="{for.body17:                                       \l  %indvars.iv = phi i64 [ %tmp8, %for.body17.preheader ], [ %vSSA_sigma1,\l... %for.inc23.for.body17_crit_edge ]\l  %arrayidx19 = getelementptr inbounds [512 x i32], [512 x i32]* @puzzl, i64\l... 0, i64 %indvars.iv\l  %tmp9 = load i32, i32* %arrayidx19, align 4, !tbaa !2\l  %tobool20 = icmp eq i32 %tmp9, 0\l  br i1 %tobool20, label %cleanup.loopexit.split.loop.exit46, label %for.inc23\l|{<s0>T|<s1>F}}"];
	Node0x88c1980:s0 -> Node0x88c1ac0;
	Node0x88c1980:s1 -> Node0x88c19d0;
	Node0x88c19d0 [shape=record,label="{for.inc23:                                        \l  %indvars.iv.next = add nsw i64 %indvars.iv, 1\l  %cmp16 = icmp slt i64 %indvars.iv.next, 512\l  br i1 %cmp16, label %for.inc23.for.body17_crit_edge, label\l... %for.inc23.cleanup_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x88c19d0:s0 -> Node0x88c1a70;
	Node0x88c19d0:s1 -> Node0x88c1a20;
	Node0x88c1a20 [shape=record,label="{for.inc23.cleanup_crit_edge:                      \l  br label %cleanup\l}"];
	Node0x88c1a20 -> Node0x88c1b10;
	Node0x88c1a70 [shape=record,label="{for.inc23.for.body17_crit_edge:                   \l  %vSSA_sigma1 = phi i64 [ %indvars.iv.next, %for.inc23 ]\l  br label %for.body17\l}"];
	Node0x88c1a70 -> Node0x88c1980;
	Node0x88c1ac0 [shape=record,label="{cleanup.loopexit.split.loop.exit46:               \l  %tmp10 = trunc i64 %indvars.iv to i32\l  br label %cleanup\l}"];
	Node0x88c1ac0 -> Node0x88c1b10;
	Node0x88c1b10 [shape=record,label="{cleanup:                                          \l  %retval.0 = phi i32 [ 0, %for.end.cleanup_crit_edge ], [ %tmp10,\l... %cleanup.loopexit.split.loop.exit46 ], [ 0, %for.inc23.cleanup_crit_edge ]\l  ret i32 %retval.0\l}"];
}
