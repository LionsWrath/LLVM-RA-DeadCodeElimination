digraph "CFG for 'Trees' function" {
	label="CFG for 'Trees' function";

	Node0x8e34cf0 [shape=record,label="{entry:\l  tail call void @tInitarr()\l  %call = tail call noalias i8* @malloc(i64 24) #5\l  store i8* %call, i8** bitcast (%struct.node** @tree to i8**), align 8, !tbaa\l... !2\l  call void @llvm.memset.p0i8.i64(i8* align 8 %call, i8 0, i64 16, i1 false)\l  %tmp = load i32, i32* getelementptr inbounds ([5001 x i32], [5001 x i32]*\l... @sortlist, i64 0, i64 1), align 4, !tbaa !6\l  %val = getelementptr inbounds i8, i8* %call, i64 16\l  %tmp1 = bitcast i8* %val to i32*\l  store i32 %tmp, i32* %tmp1, align 8, !tbaa !8\l  br label %for.body\l}"];
	Node0x8e34cf0 -> Node0x8e36af0;
	Node0x8e36af0 [shape=record,label="{for.body:                                         \l  %indvars.iv = phi i64 [ 2, %entry ], [ %indvars.iv.next,\l... %for.body.for.body_crit_edge ]\l  %arrayidx = getelementptr inbounds [5001 x i32], [5001 x i32]* @sortlist,\l... i64 0, i64 %indvars.iv\l  %tmp2 = load i32, i32* %arrayidx, align 4, !tbaa !6\l  %tmp3 = load %struct.node*, %struct.node** @tree, align 8, !tbaa !2\l  tail call void @Insert(i32 %tmp2, %struct.node* %tmp3)\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %exitcond = icmp eq i64 %indvars.iv.next, 5001\l  br i1 %exitcond, label %for.end, label %for.body.for.body_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x8e36af0:s0 -> Node0x8e36b90;
	Node0x8e36af0:s1 -> Node0x8e36b40;
	Node0x8e36b40 [shape=record,label="{for.body.for.body_crit_edge:                      \l  br label %for.body\l}"];
	Node0x8e36b40 -> Node0x8e36af0;
	Node0x8e36b90 [shape=record,label="{for.end:                                          \l  %add = add nsw i32 %run, 2\l  %idxprom1 = sext i32 %add to i64\l  %arrayidx2 = getelementptr inbounds [5001 x i32], [5001 x i32]* @sortlist,\l... i64 0, i64 %idxprom1\l  %tmp4 = load i32, i32* %arrayidx2, align 4, !tbaa !6\l  %call3 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x\l... i8], [4 x i8]* @.str, i64 0, i64 0), i32 %tmp4)\l  %tmp5 = load %struct.node*, %struct.node** @tree, align 8, !tbaa !2\l  %call4 = tail call i32 @Checktree(%struct.node* %tmp5)\l  %tobool = icmp eq i32 %call4, 0\l  br i1 %tobool, label %if.then, label %for.end.if.end_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x8e36b90:s0 -> Node0x8e36c30;
	Node0x8e36b90:s1 -> Node0x8e36be0;
	Node0x8e36be0 [shape=record,label="{for.end.if.end_crit_edge:                         \l  br label %if.end\l}"];
	Node0x8e36be0 -> Node0x8e36c80;
	Node0x8e36c30 [shape=record,label="{if.then:                                          \l  %puts = tail call i32 @puts(i8* getelementptr inbounds ([16 x i8], [16 x\l... i8]* @str, i64 0, i64 0))\l  br label %if.end\l}"];
	Node0x8e36c30 -> Node0x8e36c80;
	Node0x8e36c80 [shape=record,label="{if.end:                                           \l  ret void\l}"];
}
