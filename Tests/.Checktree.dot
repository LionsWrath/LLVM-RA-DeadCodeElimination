digraph "CFG for 'Checktree' function" {
	label="CFG for 'Checktree' function";

	Node0x8e33250 [shape=record,label="{entry:\l  %left = getelementptr inbounds %struct.node, %struct.node* %p, i64 0, i32 0\l  %tmp = load %struct.node*, %struct.node** %left, align 8, !tbaa !2\l  %cmp = icmp eq %struct.node* %tmp, null\l  br i1 %cmp, label %entry.if.end7_crit_edge, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x8e33250:s0 -> Node0x8e2e960;
	Node0x8e33250:s1 -> Node0x8e2e9b0;
	Node0x8e2e960 [shape=record,label="{entry.if.end7_crit_edge:                          \l  br label %if.end7\l}"];
	Node0x8e2e960 -> Node0x8e34510;
	Node0x8e2e9b0 [shape=record,label="{if.then:                                          \l  %vSSA_sigma = phi %struct.node* [ %tmp, %entry ]\l  %val = getelementptr inbounds %struct.node, %struct.node* %tmp, i64 0, i32 2\l  %tmp1 = load i32, i32* %val, align 8, !tbaa !8\l  %val2 = getelementptr inbounds %struct.node, %struct.node* %p, i64 0, i32 2\l  %tmp2 = load i32, i32* %val2, align 8, !tbaa !8\l  %cmp3 = icmp sgt i32 %tmp1, %tmp2\l  br i1 %cmp3, label %if.else, label %if.then.if.end7_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x8e2e9b0:s0 -> Node0x8e344c0;
	Node0x8e2e9b0:s1 -> Node0x8e34470;
	Node0x8e34470 [shape=record,label="{if.then.if.end7_crit_edge:                        \l  br label %if.end7\l}"];
	Node0x8e34470 -> Node0x8e34510;
	Node0x8e344c0 [shape=record,label="{if.else:                                          \l  %call = tail call i32 @Checktree(%struct.node* nonnull %vSSA_sigma)\l  %tobool = icmp ne i32 %call, 0\l  %land.ext = zext i1 %tobool to i32\l  br label %if.end7\l}"];
	Node0x8e344c0 -> Node0x8e34510;
	Node0x8e34510 [shape=record,label="{if.end7:                                          \l  %result.0 = phi i32 [ %land.ext, %if.else ], [ 1, %entry.if.end7_crit_edge\l... ], [ 0, %if.then.if.end7_crit_edge ]\l  %right = getelementptr inbounds %struct.node, %struct.node* %p, i64 0, i32 1\l  %tmp3 = load %struct.node*, %struct.node** %right, align 8, !tbaa !9\l  %cmp8 = icmp eq %struct.node* %tmp3, null\l  br i1 %cmp8, label %if.end7.if.end24_crit_edge, label %if.then9\l|{<s0>T|<s1>F}}"];
	Node0x8e34510:s0 -> Node0x8e34560;
	Node0x8e34510:s1 -> Node0x8e345b0;
	Node0x8e34560 [shape=record,label="{if.end7.if.end24_crit_edge:                       \l  br label %if.end24\l}"];
	Node0x8e34560 -> Node0x8e346a0;
	Node0x8e345b0 [shape=record,label="{if.then9:                                         \l  %vSSA_sigma1 = phi %struct.node* [ %tmp3, %if.end7 ]\l  %val11 = getelementptr inbounds %struct.node, %struct.node* %tmp3, i64 0,\l... i32 2\l  %tmp4 = load i32, i32* %val11, align 8, !tbaa !8\l  %val12 = getelementptr inbounds %struct.node, %struct.node* %p, i64 0, i32 2\l  %tmp5 = load i32, i32* %val12, align 8, !tbaa !8\l  %cmp13 = icmp slt i32 %tmp4, %tmp5\l  br i1 %cmp13, label %if.else15, label %if.then9.if.end24_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x8e345b0:s0 -> Node0x8e34650;
	Node0x8e345b0:s1 -> Node0x8e34600;
	Node0x8e34600 [shape=record,label="{if.then9.if.end24_crit_edge:                      \l  br label %if.end24\l}"];
	Node0x8e34600 -> Node0x8e346a0;
	Node0x8e34650 [shape=record,label="{if.else15:                                        \l  %call17 = tail call i32 @Checktree(%struct.node* nonnull %vSSA_sigma1)\l  %tobool18 = icmp ne i32 %call17, 0\l  %tobool20 = icmp ne i32 %result.0, 0\l  %tmp6 = and i1 %tobool20, %tobool18\l  %land.ext22 = zext i1 %tmp6 to i32\l  ret i32 %land.ext22\l}"];
	Node0x8e346a0 [shape=record,label="{if.end24:                                         \l  %result.1 = phi i32 [ %result.0, %if.end7.if.end24_crit_edge ], [ 0,\l... %if.then9.if.end24_crit_edge ]\l  ret i32 %result.1\l}"];
}
