digraph "CFG for 'Insert' function" {
	label="CFG for 'Insert' function";

	Node0x8e31260 [shape=record,label="{entry:\l  br label %tailrecurse\l}"];
	Node0x8e31260 -> Node0x8e31e40;
	Node0x8e31e40 [shape=record,label="{tailrecurse:                                      \l  %t.tr = phi %struct.node* [ %t, %entry ], [ %t.tr.be, %tailrecurse.backedge ]\l  %val = getelementptr inbounds %struct.node, %struct.node* %t.tr, i64 0, i32 2\l  %tmp = load i32, i32* %val, align 8, !tbaa !2\l  %cmp = icmp slt i32 %tmp, %n\l  br i1 %cmp, label %if.then, label %if.else5\l|{<s0>T|<s1>F}}"];
	Node0x8e31e40:s0 -> Node0x8e31e90;
	Node0x8e31e40:s1 -> Node0x8e31fd0;
	Node0x8e31e90 [shape=record,label="{if.then:                                          \l  %vSSA_sigma1 = phi i32 [ %n, %tailrecurse ]\l  %left = getelementptr inbounds %struct.node, %struct.node* %t.tr, i64 0, i32\l... 0\l  %tmp1 = load %struct.node*, %struct.node** %left, align 8, !tbaa !8\l  %cmp1 = icmp eq %struct.node* %tmp1, null\l  br i1 %cmp1, label %if.then2, label %if.then.tailrecurse.backedge_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x8e31e90:s0 -> Node0x8e31f80;
	Node0x8e31e90:s1 -> Node0x8e31ee0;
	Node0x8e31ee0 [shape=record,label="{if.then.tailrecurse.backedge_crit_edge:           \l  %vSSA_sigma3 = phi %struct.node* [ %tmp1, %if.then ]\l  br label %tailrecurse.backedge\l}"];
	Node0x8e31ee0 -> Node0x8e31f30;
	Node0x8e31f30 [shape=record,label="{tailrecurse.backedge:                             \l  %t.tr.be = phi %struct.node* [ %vSSA_sigma3,\l... %if.then.tailrecurse.backedge_crit_edge ], [ %vSSA_sigma5,\l... %if.then8.tailrecurse.backedge_crit_edge ]\l  br label %tailrecurse\l}"];
	Node0x8e31f30 -> Node0x8e31e40;
	Node0x8e31f80 [shape=record,label="{if.then2:                                         \l  %left.le = getelementptr inbounds %struct.node, %struct.node* %t.tr, i64 0,\l... i32 0\l  tail call void @CreateNode(%struct.node** %left.le, i32 %vSSA_sigma1)\l  br label %if.end16\l}"];
	Node0x8e31f80 -> Node0x8e32160;
	Node0x8e31fd0 [shape=record,label="{if.else5:                                         \l  %vSSA_sigma2 = phi i32 [ %n, %tailrecurse ]\l  %vSSA_sigma = phi i32 [ %tmp, %tailrecurse ]\l  %cmp7 = icmp sgt i32 %vSSA_sigma, %vSSA_sigma2\l  br i1 %cmp7, label %if.then8, label %if.else5.if.end16_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x8e31fd0:s0 -> Node0x8e32070;
	Node0x8e31fd0:s1 -> Node0x8e32020;
	Node0x8e32020 [shape=record,label="{if.else5.if.end16_crit_edge:                      \l  br label %if.end16\l}"];
	Node0x8e32020 -> Node0x8e32160;
	Node0x8e32070 [shape=record,label="{if.then8:                                         \l  %vSSA_sigma4 = phi i32 [ %vSSA_sigma2, %if.else5 ]\l  %right = getelementptr inbounds %struct.node, %struct.node* %t.tr, i64 0,\l... i32 1\l  %tmp2 = load %struct.node*, %struct.node** %right, align 8, !tbaa !9\l  %cmp9 = icmp eq %struct.node* %tmp2, null\l  br i1 %cmp9, label %if.then10, label %if.then8.tailrecurse.backedge_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x8e32070:s0 -> Node0x8e32110;
	Node0x8e32070:s1 -> Node0x8e320c0;
	Node0x8e320c0 [shape=record,label="{if.then8.tailrecurse.backedge_crit_edge:          \l  %vSSA_sigma5 = phi %struct.node* [ %tmp2, %if.then8 ]\l  br label %tailrecurse.backedge\l}"];
	Node0x8e320c0 -> Node0x8e31f30;
	Node0x8e32110 [shape=record,label="{if.then10:                                        \l  %right.le = getelementptr inbounds %struct.node, %struct.node* %t.tr, i64 0,\l... i32 1\l  tail call void @CreateNode(%struct.node** nonnull %right.le, i32\l... %vSSA_sigma4)\l  br label %if.end16\l}"];
	Node0x8e32110 -> Node0x8e32160;
	Node0x8e32160 [shape=record,label="{if.end16:                                         \l  ret void\l}"];
}
